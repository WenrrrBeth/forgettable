import axios from "axios";

/**
 * Creating a new axios instance with custom config
 * axio instance contains { baseURL, timeout, headers }
 */
const API = axios.create({ baseURL: "http://localhost:5000" });

/**
 * intercept requests before they are handled by then or catch
 * add a request interceptor
 */
API.interceptors.request.use((req) => {
  if (localStorage.getItem("profile")) {
    /**
     * creating a req handlers to configure
     * Bearer Token is a cryptic string, generated by the server in response to a login request.
     */
    req.headers.Authorization = `Bearer ${
      JSON.parse(localStorage.getItem("profile")).token
    }`;
  }
  return req;
});

export const signin = (inputData) => API.post("/profile/signin", inputData);
export const signup = (inputData) => API.post("/profile/signup", inputData);
export const googleSignin = (inputData) => API.post("profile/googlesignin", inputData);
export const updateProfile = (id, updatedData) => API.patch(`/profile/${id}`, updatedData);
export const getProfile = (id) => API.get(`/profile/${id}`);

export const postevent = (inputData) => API.post("/forgettable", inputData);
export const getUnsharedPosts = (id) => API.get(`/forgettable/${id}/unshared`);
export const getSharedPosts = (id) => API.get(`/forgettable/${id}/shared`);
export const getAllSharedPosts = () => API.get("/forgettable/shares");
export const updatePost = (pid, updatedData) => API.patch(`/forgettable/${pid}`, updatedData);
export const getSavedPost = (id) => API.get(`/forgettable/${id}/saved`);
export const getImage = (pid) => API.get(`/forgettable/${pid}/lgimage`)
